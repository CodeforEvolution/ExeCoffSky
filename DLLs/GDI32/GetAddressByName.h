void *
GetAddressByName
(const char *name)
{
	if (NULL == name) return NULL;
	else if (0 == strcmp(name, "AbortDoc")) return (void *)AbortDoc;
	else if (0 == strcmp(name, "AbortPath")) return (void *)AbortPath;
	else if (0 == strcmp(name, "AddFontResourceA")) return (void *)AddFontResourceA;
	else if (0 == strcmp(name, "AddFontResourceW")) return (void *)AddFontResourceW;
	else if (0 == strcmp(name, "AngleArc")) return (void *)AngleArc;
	else if (0 == strcmp(name, "AnimatePalette")) return (void *)AnimatePalette;
	else if (0 == strcmp(name, "Arc")) return (void *)Arc;
	else if (0 == strcmp(name, "ArcTo")) return (void *)ArcTo;
	else if (0 == strcmp(name, "BeginPath")) return (void *)BeginPath;
	else if (0 == strcmp(name, "BitBlt")) return (void *)BitBlt;
	else if (0 == strcmp(name, "CancelDC")) return (void *)CancelDC;
	else if (0 == strcmp(name, "CheckColorsInGamut")) return (void *)CheckColorsInGamut;
	else if (0 == strcmp(name, "ChoosePixelFormat")) return (void *)ChoosePixelFormat;
	else if (0 == strcmp(name, "Chord")) return (void *)Chord;
	else if (0 == strcmp(name, "CloseEnhMetaFile")) return (void *)CloseEnhMetaFile;
	else if (0 == strcmp(name, "CloseFigure")) return (void *)CloseFigure;
	else if (0 == strcmp(name, "CloseMetaFile")) return (void *)CloseMetaFile;
	else if (0 == strcmp(name, "ColorMatchToTarget")) return (void *)ColorMatchToTarget;
	else if (0 == strcmp(name, "CombineRgn")) return (void *)CombineRgn;
	else if (0 == strcmp(name, "CombineTransform")) return (void *)CombineTransform;
	else if (0 == strcmp(name, "CopyEnhMetaFileA")) return (void *)CopyEnhMetaFileA;
	else if (0 == strcmp(name, "CopyEnhMetaFileW")) return (void *)CopyEnhMetaFileW;
	else if (0 == strcmp(name, "CopyMetaFileA")) return (void *)CopyMetaFileA;
	else if (0 == strcmp(name, "CopyMetaFileW")) return (void *)CopyMetaFileW;
	else if (0 == strcmp(name, "CreateBitmap")) return (void *)CreateBitmap;
	else if (0 == strcmp(name, "CreateBitmapIndirect")) return (void *)CreateBitmapIndirect;
	else if (0 == strcmp(name, "CreateBrushIndirect")) return (void *)CreateBrushIndirect;
	else if (0 == strcmp(name, "CreateColorSpaceA")) return (void *)CreateColorSpaceA;
	else if (0 == strcmp(name, "CreateColorSpaceW")) return (void *)CreateColorSpaceW;
	else if (0 == strcmp(name, "CreateCompatibleBitmap")) return (void *)CreateCompatibleBitmap;
	else if (0 == strcmp(name, "CreateCompatibleDC")) return (void *)CreateCompatibleDC;
	else if (0 == strcmp(name, "CreateDCA")) return (void *)CreateDCA;
	else if (0 == strcmp(name, "CreateDCW")) return (void *)CreateDCW;
	else if (0 == strcmp(name, "CreateDIBPatternBrush")) return (void *)CreateDIBPatternBrush;
	else if (0 == strcmp(name, "CreateDIBPatternBrushPt")) return (void *)CreateDIBPatternBrushPt;
	else if (0 == strcmp(name, "CreateDIBSection")) return (void *)CreateDIBSection;
	else if (0 == strcmp(name, "CreateDIBitmap")) return (void *)CreateDIBitmap;
	else if (0 == strcmp(name, "CreateDiscardableBitmap")) return (void *)CreateDiscardableBitmap;
	else if (0 == strcmp(name, "CreateEllipticRgn")) return (void *)CreateEllipticRgn;
	else if (0 == strcmp(name, "CreateEllipticRgnIndirect")) return (void *)CreateEllipticRgnIndirect;
	else if (0 == strcmp(name, "CreateEnhMetaFileA")) return (void *)CreateEnhMetaFileA;
	else if (0 == strcmp(name, "CreateEnhMetaFileW")) return (void *)CreateEnhMetaFileW;
	else if (0 == strcmp(name, "CreateFontA")) return (void *)CreateFontA;
	else if (0 == strcmp(name, "CreateFontIndirectA")) return (void *)CreateFontIndirectA;
	else if (0 == strcmp(name, "CreateFontIndirectW")) return (void *)CreateFontIndirectW;
	else if (0 == strcmp(name, "CreateFontW")) return (void *)CreateFontW;
	else if (0 == strcmp(name, "CreateHalftonePalette")) return (void *)CreateHalftonePalette;
	else if (0 == strcmp(name, "CreateHatchBrush")) return (void *)CreateHatchBrush;
	else if (0 == strcmp(name, "CreateICA")) return (void *)CreateICA;
	else if (0 == strcmp(name, "CreateICW")) return (void *)CreateICW;
	else if (0 == strcmp(name, "CreateMetaFileA")) return (void *)CreateMetaFileA;
	else if (0 == strcmp(name, "CreateMetaFileW")) return (void *)CreateMetaFileW;
	else if (0 == strcmp(name, "CreatePalette")) return (void *)CreatePalette;
	else if (0 == strcmp(name, "CreatePatternBrush")) return (void *)CreatePatternBrush;
	else if (0 == strcmp(name, "CreatePen")) return (void *)CreatePen;
	else if (0 == strcmp(name, "CreatePenIndirect")) return (void *)CreatePenIndirect;
	else if (0 == strcmp(name, "CreatePolyPolygonRgn")) return (void *)CreatePolyPolygonRgn;
	else if (0 == strcmp(name, "CreatePolygonRgn")) return (void *)CreatePolygonRgn;
	else if (0 == strcmp(name, "CreateRectRgn")) return (void *)CreateRectRgn;
	else if (0 == strcmp(name, "CreateRectRgnIndirect")) return (void *)CreateRectRgnIndirect;
	else if (0 == strcmp(name, "CreateRoundRectRgn")) return (void *)CreateRoundRectRgn;
	else if (0 == strcmp(name, "CreateScalableFontResourceA")) return (void *)CreateScalableFontResourceA;
	else if (0 == strcmp(name, "CreateScalableFontResourceW")) return (void *)CreateScalableFontResourceW;
	else if (0 == strcmp(name, "CreateSolidBrush")) return (void *)CreateSolidBrush;
	else if (0 == strcmp(name, "DPtoLP")) return (void *)DPtoLP;
	else if (0 == strcmp(name, "DeleteColorSpace")) return (void *)DeleteColorSpace;
	else if (0 == strcmp(name, "DeleteDC")) return (void *)DeleteDC;
	else if (0 == strcmp(name, "DeleteEnhMetaFile")) return (void *)DeleteEnhMetaFile;
	else if (0 == strcmp(name, "DeleteMetaFile")) return (void *)DeleteMetaFile;
	else if (0 == strcmp(name, "DeleteObject")) return (void *)DeleteObject;
	else if (0 == strcmp(name, "DescribePixelFormat")) return (void *)DescribePixelFormat;
	else if (0 == strcmp(name, "DrawEscape")) return (void *)DrawEscape;
	else if (0 == strcmp(name, "Ellipse")) return (void *)Ellipse;
	else if (0 == strcmp(name, "EndDoc")) return (void *)EndDoc;
	else if (0 == strcmp(name, "EndPage")) return (void *)EndPage;
	else if (0 == strcmp(name, "EndPath")) return (void *)EndPath;
	else if (0 == strcmp(name, "EnumEnhMetaFile")) return (void *)EnumEnhMetaFile;
	else if (0 == strcmp(name, "EnumFontFamiliesA")) return (void *)EnumFontFamiliesA;
	else if (0 == strcmp(name, "EnumFontFamiliesExA")) return (void *)EnumFontFamiliesExA;
	else if (0 == strcmp(name, "EnumFontFamiliesExW")) return (void *)EnumFontFamiliesExW;
	else if (0 == strcmp(name, "EnumFontFamiliesW")) return (void *)EnumFontFamiliesW;
	else if (0 == strcmp(name, "EnumFontsA")) return (void *)EnumFontsA;
	else if (0 == strcmp(name, "EnumFontsW")) return (void *)EnumFontsW;
	else if (0 == strcmp(name, "EnumICMProfilesA")) return (void *)EnumICMProfilesA;
	else if (0 == strcmp(name, "EnumICMProfilesW")) return (void *)EnumICMProfilesW;
	else if (0 == strcmp(name, "EnumMetaFile")) return (void *)EnumMetaFile;
	else if (0 == strcmp(name, "EnumObjects")) return (void *)EnumObjects;
	else if (0 == strcmp(name, "EqualRgn")) return (void *)EqualRgn;
	else if (0 == strcmp(name, "Escape")) return (void *)Escape;
	else if (0 == strcmp(name, "ExcludeClipRect")) return (void *)ExcludeClipRect;
	else if (0 == strcmp(name, "ExtCreatePen")) return (void *)ExtCreatePen;
	else if (0 == strcmp(name, "ExtCreateRegion")) return (void *)ExtCreateRegion;
	else if (0 == strcmp(name, "ExtEscape")) return (void *)ExtEscape;
	else if (0 == strcmp(name, "ExtFloodFill")) return (void *)ExtFloodFill;
	else if (0 == strcmp(name, "ExtSelectClipRgn")) return (void *)ExtSelectClipRgn;
	else if (0 == strcmp(name, "ExtTextOutA")) return (void *)ExtTextOutA;
	else if (0 == strcmp(name, "ExtTextOutW")) return (void *)ExtTextOutW;
	else if (0 == strcmp(name, "FillPath")) return (void *)FillPath;
	else if (0 == strcmp(name, "FillRgn")) return (void *)FillRgn;
	else if (0 == strcmp(name, "FixBrushOrgEx")) return (void *)FixBrushOrgEx;
	else if (0 == strcmp(name, "FlattenPath")) return (void *)FlattenPath;
	else if (0 == strcmp(name, "FloodFill")) return (void *)FloodFill;
	else if (0 == strcmp(name, "FrameRgn")) return (void *)FrameRgn;
	else if (0 == strcmp(name, "GdiComment")) return (void *)GdiComment;
	else if (0 == strcmp(name, "GdiFlush")) return (void *)GdiFlush;
	else if (0 == strcmp(name, "GdiGetBatchLimit")) return (void *)GdiGetBatchLimit;
	else if (0 == strcmp(name, "GdiSetBatchLimit")) return (void *)GdiSetBatchLimit;
	else if (0 == strcmp(name, "GetArcDirection")) return (void *)GetArcDirection;
	else if (0 == strcmp(name, "GetAspectRatioFilterEx")) return (void *)GetAspectRatioFilterEx;
	else if (0 == strcmp(name, "GetBitmapBits")) return (void *)GetBitmapBits;
	else if (0 == strcmp(name, "GetBitmapDimensionEx")) return (void *)GetBitmapDimensionEx;
	else if (0 == strcmp(name, "GetBkColor")) return (void *)GetBkColor;
	else if (0 == strcmp(name, "GetBkMode")) return (void *)GetBkMode;
	else if (0 == strcmp(name, "GetBoundsRect")) return (void *)GetBoundsRect;
	else if (0 == strcmp(name, "GetBrushOrgEx")) return (void *)GetBrushOrgEx;
	else if (0 == strcmp(name, "GetCharABCWidthsA")) return (void *)GetCharABCWidthsA;
	else if (0 == strcmp(name, "GetCharABCWidthsFloatA")) return (void *)GetCharABCWidthsFloatA;
	else if (0 == strcmp(name, "GetCharABCWidthsFloatW")) return (void *)GetCharABCWidthsFloatW;
	else if (0 == strcmp(name, "GetCharABCWidthsW")) return (void *)GetCharABCWidthsW;
	else if (0 == strcmp(name, "GetCharWidth32A")) return (void *)GetCharWidth32A;
	else if (0 == strcmp(name, "GetCharWidth32W")) return (void *)GetCharWidth32W;
	else if (0 == strcmp(name, "GetCharWidthA")) return (void *)GetCharWidthA;
	else if (0 == strcmp(name, "GetCharWidthFloatA")) return (void *)GetCharWidthFloatA;
	else if (0 == strcmp(name, "GetCharWidthFloatW")) return (void *)GetCharWidthFloatW;
	else if (0 == strcmp(name, "GetCharWidthW")) return (void *)GetCharWidthW;
	else if (0 == strcmp(name, "GetCharacterPlacementA")) return (void *)GetCharacterPlacementA;
	else if (0 == strcmp(name, "GetCharacterPlacementW")) return (void *)GetCharacterPlacementW;
	else if (0 == strcmp(name, "GetClipBox")) return (void *)GetClipBox;
	else if (0 == strcmp(name, "GetClipRgn")) return (void *)GetClipRgn;
	else if (0 == strcmp(name, "GetColorAdjustment")) return (void *)GetColorAdjustment;
	else if (0 == strcmp(name, "GetColorSpace")) return (void *)GetColorSpace;
	else if (0 == strcmp(name, "GetCurrentObject")) return (void *)GetCurrentObject;
	else if (0 == strcmp(name, "GetCurrentPositionEx")) return (void *)GetCurrentPositionEx;
	else if (0 == strcmp(name, "GetDCOrgEx")) return (void *)GetDCOrgEx;
	else if (0 == strcmp(name, "GetDIBColorTable")) return (void *)GetDIBColorTable;
	else if (0 == strcmp(name, "GetDIBits")) return (void *)GetDIBits;
	else if (0 == strcmp(name, "GetDeviceCaps")) return (void *)GetDeviceCaps;
	else if (0 == strcmp(name, "GetDeviceGammaRamp")) return (void *)GetDeviceGammaRamp;
	else if (0 == strcmp(name, "GetEnhMetaFileA")) return (void *)GetEnhMetaFileA;
	else if (0 == strcmp(name, "GetEnhMetaFileDescriptionA")) return (void *)GetEnhMetaFileDescriptionA;
	else if (0 == strcmp(name, "GetEnhMetaFileDescriptionW")) return (void *)GetEnhMetaFileDescriptionW;
	else if (0 == strcmp(name, "GetEnhMetaFileHeader")) return (void *)GetEnhMetaFileHeader;
	else if (0 == strcmp(name, "GetEnhMetaFilePaletteEntries")) return (void *)GetEnhMetaFilePaletteEntries;
	else if (0 == strcmp(name, "GetEnhMetaFilePixelFormat")) return (void *)GetEnhMetaFilePixelFormat;
	else if (0 == strcmp(name, "GetEnhMetaFileW")) return (void *)GetEnhMetaFileW;
	else if (0 == strcmp(name, "GetFontData")) return (void *)GetFontData;
	else if (0 == strcmp(name, "GetFontLanguageInfo")) return (void *)GetFontLanguageInfo;
	else if (0 == strcmp(name, "GetGlyphOutlineA")) return (void *)GetGlyphOutlineA;
	else if (0 == strcmp(name, "GetGlyphOutlineW")) return (void *)GetGlyphOutlineW;
	else if (0 == strcmp(name, "GetGraphicsMode")) return (void *)GetGraphicsMode;
	else if (0 == strcmp(name, "GetICMProfileA")) return (void *)GetICMProfileA;
	else if (0 == strcmp(name, "GetICMProfileW")) return (void *)GetICMProfileW;
	else if (0 == strcmp(name, "GetKerningPairsA")) return (void *)GetKerningPairsA;
	else if (0 == strcmp(name, "GetKerningPairsW")) return (void *)GetKerningPairsW;
	else if (0 == strcmp(name, "GetLogColorSpaceA")) return (void *)GetLogColorSpaceA;
	else if (0 == strcmp(name, "GetLogColorSpaceW")) return (void *)GetLogColorSpaceW;
	else if (0 == strcmp(name, "GetMapMode")) return (void *)GetMapMode;
	else if (0 == strcmp(name, "GetMetaFileA")) return (void *)GetMetaFileA;
	else if (0 == strcmp(name, "GetMetaFileBitsEx")) return (void *)GetMetaFileBitsEx;
	else if (0 == strcmp(name, "GetMetaFileW")) return (void *)GetMetaFileW;
	else if (0 == strcmp(name, "GetMetaRgn")) return (void *)GetMetaRgn;
	else if (0 == strcmp(name, "GetMiterLimit")) return (void *)GetMiterLimit;
	else if (0 == strcmp(name, "GetNearestColor")) return (void *)GetNearestColor;
	else if (0 == strcmp(name, "GetNearestPaletteIndex")) return (void *)GetNearestPaletteIndex;
	else if (0 == strcmp(name, "GetObjectA")) return (void *)GetObjectA;
	else if (0 == strcmp(name, "GetObjectType")) return (void *)GetObjectType;
	else if (0 == strcmp(name, "GetObjectW")) return (void *)GetObjectW;
	else if (0 == strcmp(name, "GetOutlineTextMetricsA")) return (void *)GetOutlineTextMetricsA;
	else if (0 == strcmp(name, "GetOutlineTextMetricsW")) return (void *)GetOutlineTextMetricsW;
	else if (0 == strcmp(name, "GetPaletteEntries")) return (void *)GetPaletteEntries;
	else if (0 == strcmp(name, "GetPath")) return (void *)GetPath;
	else if (0 == strcmp(name, "GetPixel")) return (void *)GetPixel;
	else if (0 == strcmp(name, "GetPixelFormat")) return (void *)GetPixelFormat;
	else if (0 == strcmp(name, "GetPolyFillMode")) return (void *)GetPolyFillMode;
	else if (0 == strcmp(name, "GetROP2")) return (void *)GetROP2;
	else if (0 == strcmp(name, "GetRasterizerCaps")) return (void *)GetRasterizerCaps;
	else if (0 == strcmp(name, "GetRegionData")) return (void *)GetRegionData;
	else if (0 == strcmp(name, "GetRgnBox")) return (void *)GetRgnBox;
	else if (0 == strcmp(name, "GetStockObject")) return (void *)GetStockObject;
	else if (0 == strcmp(name, "GetStretchBltMode")) return (void *)GetStretchBltMode;
	else if (0 == strcmp(name, "GetSystemPaletteEntries")) return (void *)GetSystemPaletteEntries;
	else if (0 == strcmp(name, "GetSystemPaletteUse")) return (void *)GetSystemPaletteUse;
	else if (0 == strcmp(name, "GetTextAlign")) return (void *)GetTextAlign;
	else if (0 == strcmp(name, "GetTextCharacterExtra")) return (void *)GetTextCharacterExtra;
	else if (0 == strcmp(name, "GetTextCharset")) return (void *)GetTextCharset;
	else if (0 == strcmp(name, "GetTextCharsetInfo")) return (void *)GetTextCharsetInfo;
	else if (0 == strcmp(name, "GetTextColor")) return (void *)GetTextColor;
	else if (0 == strcmp(name, "GetTextExtentExPointA")) return (void *)GetTextExtentExPointA;
	else if (0 == strcmp(name, "GetTextExtentExPointW")) return (void *)GetTextExtentExPointW;
	else if (0 == strcmp(name, "GetTextExtentPoint32A")) return (void *)GetTextExtentPoint32A;
	else if (0 == strcmp(name, "GetTextExtentPoint32W")) return (void *)GetTextExtentPoint32W;
	else if (0 == strcmp(name, "GetTextExtentPointA")) return (void *)GetTextExtentPointA;
	else if (0 == strcmp(name, "GetTextExtentPointW")) return (void *)GetTextExtentPointW;
	else if (0 == strcmp(name, "GetTextFaceA")) return (void *)GetTextFaceA;
	else if (0 == strcmp(name, "GetTextFaceW")) return (void *)GetTextFaceW;
	else if (0 == strcmp(name, "GetTextMetricsA")) return (void *)GetTextMetricsA;
	else if (0 == strcmp(name, "GetTextMetricsW")) return (void *)GetTextMetricsW;
	else if (0 == strcmp(name, "GetViewportExtEx")) return (void *)GetViewportExtEx;
	else if (0 == strcmp(name, "GetViewportOrgEx")) return (void *)GetViewportOrgEx;
	else if (0 == strcmp(name, "GetWinMetaFileBits")) return (void *)GetWinMetaFileBits;
	else if (0 == strcmp(name, "GetWindowExtEx")) return (void *)GetWindowExtEx;
	else if (0 == strcmp(name, "GetWindowOrgEx")) return (void *)GetWindowOrgEx;
	else if (0 == strcmp(name, "GetWorldTransform")) return (void *)GetWorldTransform;
	else if (0 == strcmp(name, "IntersectClipRect")) return (void *)IntersectClipRect;
	else if (0 == strcmp(name, "InvertRgn")) return (void *)InvertRgn;
	else if (0 == strcmp(name, "LPtoDP")) return (void *)LPtoDP;
	else if (0 == strcmp(name, "LineDDA")) return (void *)LineDDA;
	else if (0 == strcmp(name, "LineTo")) return (void *)LineTo;
	else if (0 == strcmp(name, "MaskBlt")) return (void *)MaskBlt;
	else if (0 == strcmp(name, "ModifyWorldTransform")) return (void *)ModifyWorldTransform;
	else if (0 == strcmp(name, "MoveToEx")) return (void *)MoveToEx;
	else if (0 == strcmp(name, "OffsetClipRgn")) return (void *)OffsetClipRgn;
	else if (0 == strcmp(name, "OffsetRgn")) return (void *)OffsetRgn;
	else if (0 == strcmp(name, "OffsetViewportOrgEx")) return (void *)OffsetViewportOrgEx;
	else if (0 == strcmp(name, "OffsetWindowOrgEx")) return (void *)OffsetWindowOrgEx;
	else if (0 == strcmp(name, "PaintRgn")) return (void *)PaintRgn;
	else if (0 == strcmp(name, "PatBlt")) return (void *)PatBlt;
	else if (0 == strcmp(name, "PathToRegion")) return (void *)PathToRegion;
	else if (0 == strcmp(name, "Pie")) return (void *)Pie;
	else if (0 == strcmp(name, "PlayEnhMetaFile")) return (void *)PlayEnhMetaFile;
	else if (0 == strcmp(name, "PlayEnhMetaFileRecord")) return (void *)PlayEnhMetaFileRecord;
	else if (0 == strcmp(name, "PlayMetaFile")) return (void *)PlayMetaFile;
	else if (0 == strcmp(name, "PlayMetaFileRecord")) return (void *)PlayMetaFileRecord;
	else if (0 == strcmp(name, "PlgBlt")) return (void *)PlgBlt;
	else if (0 == strcmp(name, "PolyBezier")) return (void *)PolyBezier;
	else if (0 == strcmp(name, "PolyBezierTo")) return (void *)PolyBezierTo;
	else if (0 == strcmp(name, "PolyDraw")) return (void *)PolyDraw;
	else if (0 == strcmp(name, "PolyPolygon")) return (void *)PolyPolygon;
	else if (0 == strcmp(name, "PolyPolyline")) return (void *)PolyPolyline;
	else if (0 == strcmp(name, "PolyTextOutA")) return (void *)PolyTextOutA;
	else if (0 == strcmp(name, "PolyTextOutW")) return (void *)PolyTextOutW;
	else if (0 == strcmp(name, "Polygon")) return (void *)Polygon;
	else if (0 == strcmp(name, "Polyline")) return (void *)Polyline;
	else if (0 == strcmp(name, "PolylineTo")) return (void *)PolylineTo;
	else if (0 == strcmp(name, "PtInRegion")) return (void *)PtInRegion;
	else if (0 == strcmp(name, "PtVisible")) return (void *)PtVisible;
	else if (0 == strcmp(name, "RealizePalette")) return (void *)RealizePalette;
	else if (0 == strcmp(name, "RectInRegion")) return (void *)RectInRegion;
	else if (0 == strcmp(name, "RectVisible")) return (void *)RectVisible;
	else if (0 == strcmp(name, "Rectangle")) return (void *)Rectangle;
	else if (0 == strcmp(name, "RemoveFontResourceA")) return (void *)RemoveFontResourceA;
	else if (0 == strcmp(name, "RemoveFontResourceW")) return (void *)RemoveFontResourceW;
	else if (0 == strcmp(name, "ResetDCA")) return (void *)ResetDCA;
	else if (0 == strcmp(name, "ResetDCW")) return (void *)ResetDCW;
	else if (0 == strcmp(name, "ResizePalette")) return (void *)ResizePalette;
	else if (0 == strcmp(name, "RestoreDC")) return (void *)RestoreDC;
	else if (0 == strcmp(name, "RoundRect")) return (void *)RoundRect;
	else if (0 == strcmp(name, "SaveDC")) return (void *)SaveDC;
	else if (0 == strcmp(name, "ScaleViewportExtEx")) return (void *)ScaleViewportExtEx;
	else if (0 == strcmp(name, "ScaleWindowExtEx")) return (void *)ScaleWindowExtEx;
	else if (0 == strcmp(name, "SelectClipPath")) return (void *)SelectClipPath;
	else if (0 == strcmp(name, "SelectClipRgn")) return (void *)SelectClipRgn;
	else if (0 == strcmp(name, "SelectObject")) return (void *)SelectObject;
	else if (0 == strcmp(name, "SelectPalette")) return (void *)SelectPalette;
	else if (0 == strcmp(name, "SetAbortProc")) return (void *)SetAbortProc;
	else if (0 == strcmp(name, "SetArcDirection")) return (void *)SetArcDirection;
	else if (0 == strcmp(name, "SetBitmapBits")) return (void *)SetBitmapBits;
	else if (0 == strcmp(name, "SetBitmapDimensionEx")) return (void *)SetBitmapDimensionEx;
	else if (0 == strcmp(name, "SetBkColor")) return (void *)SetBkColor;
	else if (0 == strcmp(name, "SetBkMode")) return (void *)SetBkMode;
	else if (0 == strcmp(name, "SetBoundsRect")) return (void *)SetBoundsRect;
	else if (0 == strcmp(name, "SetBrushOrgEx")) return (void *)SetBrushOrgEx;
	else if (0 == strcmp(name, "SetColorAdjustment")) return (void *)SetColorAdjustment;
	else if (0 == strcmp(name, "SetColorSpace")) return (void *)SetColorSpace;
	else if (0 == strcmp(name, "SetDIBColorTable")) return (void *)SetDIBColorTable;
	else if (0 == strcmp(name, "SetDIBits")) return (void *)SetDIBits;
	else if (0 == strcmp(name, "SetDIBitsToDevice")) return (void *)SetDIBitsToDevice;
	else if (0 == strcmp(name, "SetDeviceGammaRamp")) return (void *)SetDeviceGammaRamp;
	else if (0 == strcmp(name, "SetEnhMetaFileBits")) return (void *)SetEnhMetaFileBits;
	else if (0 == strcmp(name, "SetGraphicsMode")) return (void *)SetGraphicsMode;
	else if (0 == strcmp(name, "SetICMMode")) return (void *)SetICMMode;
	else if (0 == strcmp(name, "SetICMProfileA")) return (void *)SetICMProfileA;
	else if (0 == strcmp(name, "SetICMProfileW")) return (void *)SetICMProfileW;
	else if (0 == strcmp(name, "SetMapMode")) return (void *)SetMapMode;
	else if (0 == strcmp(name, "SetMapperFlags")) return (void *)SetMapperFlags;
	else if (0 == strcmp(name, "SetMetaFileBitsEx")) return (void *)SetMetaFileBitsEx;
	else if (0 == strcmp(name, "SetMetaRgn")) return (void *)SetMetaRgn;
	else if (0 == strcmp(name, "SetMiterLimit")) return (void *)SetMiterLimit;
	else if (0 == strcmp(name, "SetPaletteEntries")) return (void *)SetPaletteEntries;
	else if (0 == strcmp(name, "SetPixel")) return (void *)SetPixel;
	else if (0 == strcmp(name, "SetPixelFormat")) return (void *)SetPixelFormat;
	else if (0 == strcmp(name, "SetPixelV")) return (void *)SetPixelV;
	else if (0 == strcmp(name, "SetPolyFillMode")) return (void *)SetPolyFillMode;
	else if (0 == strcmp(name, "SetROP2")) return (void *)SetROP2;
	else if (0 == strcmp(name, "SetRectRgn")) return (void *)SetRectRgn;
	else if (0 == strcmp(name, "SetStretchBltMode")) return (void *)SetStretchBltMode;
	else if (0 == strcmp(name, "SetSystemPaletteUse")) return (void *)SetSystemPaletteUse;
	else if (0 == strcmp(name, "SetTextAlign")) return (void *)SetTextAlign;
	else if (0 == strcmp(name, "SetTextCharacterExtra")) return (void *)SetTextCharacterExtra;
	else if (0 == strcmp(name, "SetTextColor")) return (void *)SetTextColor;
	else if (0 == strcmp(name, "SetTextJustification")) return (void *)SetTextJustification;
	else if (0 == strcmp(name, "SetViewportExtEx")) return (void *)SetViewportExtEx;
	else if (0 == strcmp(name, "SetViewportOrgEx")) return (void *)SetViewportOrgEx;
	else if (0 == strcmp(name, "SetWinMetaFileBits")) return (void *)SetWinMetaFileBits;
	else if (0 == strcmp(name, "SetWindowExtEx")) return (void *)SetWindowExtEx;
	else if (0 == strcmp(name, "SetWindowOrgEx")) return (void *)SetWindowOrgEx;
	else if (0 == strcmp(name, "SetWorldTransform")) return (void *)SetWorldTransform;
	else if (0 == strcmp(name, "StartDocA")) return (void *)StartDocA;
	else if (0 == strcmp(name, "StartDocW")) return (void *)StartDocW;
	else if (0 == strcmp(name, "StartPage")) return (void *)StartPage;
	else if (0 == strcmp(name, "StretchBlt")) return (void *)StretchBlt;
	else if (0 == strcmp(name, "StretchDIBits")) return (void *)StretchDIBits;
	else if (0 == strcmp(name, "StrokeAndFillPath")) return (void *)StrokeAndFillPath;
	else if (0 == strcmp(name, "StrokePath")) return (void *)StrokePath;
	else if (0 == strcmp(name, "SwapBuffers")) return (void *)SwapBuffers;
	else if (0 == strcmp(name, "TextOutA")) return (void *)TextOutA;
	else if (0 == strcmp(name, "TextOutW")) return (void *)TextOutW;
	else if (0 == strcmp(name, "TranslateCharsetInfo")) return (void *)TranslateCharsetInfo;
	else if (0 == strcmp(name, "UnrealizeObject")) return (void *)UnrealizeObject;
	else if (0 == strcmp(name, "UpdateColors")) return (void *)UpdateColors;
	else if (0 == strcmp(name, "UpdateICMRegKeyA")) return (void *)UpdateICMRegKeyA;
	else if (0 == strcmp(name, "UpdateICMRegKeyW")) return (void *)UpdateICMRegKeyW;
	else if (0 == strcmp(name, "WidenPath")) return (void *)WidenPath;
	return NULL;
}
