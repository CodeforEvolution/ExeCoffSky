/* --------------------------------------------------------------------------------------------
 *  ExeCoffSky for BeOS
 *  (C) 2000, 2001 ‚Æ‚æ‚µ‚Ü
 *  $Id: Win32Structures.h,v 1.1 2003/05/01 02:43:55 toyoshim Exp $
 * --------------------------------------------------------------------------------------------
 *  [Win32Structures.h]
 * -------------------------------------------------------------------------------------------- */

#if !defined(__Win32Structures_h__)
#	define	__Win32Structures_h__

#	if defined(__cplusplus)
#		if !defined(__Common_h__)
#			include "Common.h"
#		endif	// !defined(__Common_h__)
#	endif	// defined(__cplusplus)

#	define	DECLSPEC_NORETURN

typedef VOID CALLBACK (*_PROC)(VOID);
typedef _PROC DRAWSTATEPROC;
typedef _PROC DESKTOPENUMPROCA;
typedef _PROC DESKTOPENUMPROCW;
typedef _PROC PROPENUMPROCA;
typedef _PROC PROPENUMPROCW;
typedef _PROC PROPENUMPROCEXA;
typedef _PROC PROPENUMPROCEXW;
typedef _PROC WINSTAENUMPROCA;
typedef _PROC WINSTAENUMPROCW;
typedef _PROC GRAYSTRINGPROC;
typedef _PROC PAPCFUNC;
typedef _PROC SENDASYNCPROC;
typedef _PROC HOOKPROC;
typedef _PROC YIELDPROC;
typedef _PROC MMIOPROC, *LPMMIOPROC;
typedef _PROC ENHMFENUMPROC;
typedef _PROC MFENUMPROC;
typedef _PROC GOBJENUMPROC;
typedef _PROC ICMENUMPROCA;
typedef _PROC ICMENUMPROCW;
typedef _PROC LINEDDAPROC;
typedef _PROC ABORTPROC;
typedef _PROC PHANDLER_ROUTINE;
typedef _PROC PTIMERAPCROUTINE;
typedef _PROC PFNCALLBACK;
typedef _PROC LPTOP_LEVEL_EXCEPTION_FILTER;
typedef _PROC LPTIMECALLBACK;
typedef _PROC LPHANDLER_FUNCTION;

typedef struct tagOVERLAPPED {
	PACKED(DWORD Internal);
	PACKED(DWORD InternalHigh);
	PACKED(DWORD Offset);
	PACKED(DWORD OffsetHigh);
	PACKED(HANDLE hEvent);
} OVERLAPPED, *POVERLAPPED, *LPOVERLAPPED;

typedef VOID (WINAPI *LPOVERLAPPED_COMPLETION_ROUTINE)(DWORD, DWORD, LPOVERLAPPED);

typedef struct tagSTARTUPINFOA {
	PACKED(DWORD cb);
	PACKED(LPSTR lpReserved);
	PACKED(LPSTR lpDesktop);
	PACKED(LPSTR lpTitle);
	PACKED(DWORD dwX);
	PACKED(DWORD dwY);
	PACKED(DWORD dwXSize);
	PACKED(DWORD dwYSize);
	PACKED(DWORD dwXCountChars);
	PACKED(DWORD dwYCountChars);
	PACKED(DWORD dwFillAttributes);
	PACKED(DWORD dwFlags);
	PACKED(WORD wShowWindow);
	PACKED(WORD cbReserved2);
	PACKED(LPBYTE lpReserved2);
	PACKED(HANDLE hStdInput);
	PACKED(HANDLE hStdOutput);
	PACKED(HANDLE hStdError);
} STARTUPINFOA, *LPSTARTUPINFOA;

typedef struct tagSTARTUPINFOW {
	PACKED(DWORD cb);
	PACKED(LPWSTR lpReserved);
	PACKED(LPWSTR lpDesktop);
	PACKED(LPWSTR lpTitle);
	PACKED(DWORD dwX);
	PACKED(DWORD dwY);
	PACKED(DWORD dwXSize);
	PACKED(DWORD dwYSize);
	PACKED(DWORD dwXCountChars);
	PACKED(DWORD dwYCountChars);
	PACKED(DWORD dwFillAttributes);
	PACKED(DWORD dwFlags);
	PACKED(WORD wShowWindow);
	PACKED(WORD cbReserved2);
	PACKED(LPBYTE lpReserved2);
	PACKED(HANDLE hStdInput);
	PACKED(HANDLE hStdOutput);
	PACKED(HANDLE hStdError);
} STARTUPINFOW, *LPSTARTUPINFOW;

typedef struct tagPROCESS_INFORMATION {
} PROCESS_INFORMATION, *LPPROCESS_INFORMATION;

typedef struct tagSECURITY_ATTRIBUTES {
} SECURITY_ATTRIBUTES, *LPSECURITY_ATTRIBUTES;

typedef struct tagLARGE_INTEGER {
	DWORD LowPart;
	LONG HighPart;
} LARGE_INTEGER, *PLARGE_INTEGER, *LPLARGE_INTEGER;

typedef struct tagULARGE_INTEGER {
} ULARGE_INTEGER, *PULARGE_INTEGER, *LPULARGE_INTEGER;

typedef struct tagEXCEPTION_POINTERS {
} EXCEPTION_POINTERS, *LPEXCEPTION_POINTERS;

typedef struct tagPOINT {
	PACKED(LONG x);
	PACKED(LONG y);
} POINT, *LPPOINT;

typedef struct tagRECT {
	PACKED(LONG left);
	PACKED(LONG top);
	PACKED(LONG right);
	PACKED(LONG bottom);
} RECT, *LPRECT;
typedef CONST RECT CRECT, *LPCRECT;

typedef struct tagMSG {
	PACKED(HWND hwnd);
	PACKED(UINT message);
	PACKED(WPARAM wParam);
	PACKED(LPARAM lParam);
	PACKED(DWORD time);
	PACKED(POINT pt);
} MSG, *PMSG, *LPMSG;
typedef CONST MSG CMSG, *LPCMSG;

typedef struct tagPAINTSTRUCT {
	PACKED(HDC hDc);
	PACKED(BOOL fErase);
	PACKED(RECT rcPaint);
	PACKED(BOOL fRestore);
	PACKED(BOOL fIhcUpdate);
	PACKED(BYTE rgbReserved[32]);
} PAINTSTRUCT, *LPPAINTSTRUCT;
typedef CONST PAINTSTRUCT CPAINTSTRUCT, *LPCPAINTSTRUCT;

typedef struct tagWAVEHDR {
} WAVEHDR, *LPWAVEHDR;

typedef struct tagSYSTEMTIME {
	PACKED(WORD wYear);
	PACKED(WORD wMonth);
	PACKED(WORD wDayOfWeek);
	PACKED(WORD wDay);
	PACKED(WORD wHour);
	PACKED(WORD wMinute);
	PACKED(WORD wSecond);
	PACKED(WORD wMilliseconds);
} SYSTEMTIME, *LPSYSTEMTIME;

typedef struct tagGLYPHMETRICS {
	PACKED(UINT gmBlackBoxX);
	PACKED(UINT gmBlackBoxY);
	PACKED(POINT gmptGlyphOrigin);
	PACKED(short gmCellIncX);
	PACKED(short gmCellIncY);
} GLYPHMETRICS, *LPGLYPHMETRICS;

typedef struct tagFIXED {
	PACKED(WORD fract);
	PACKED(short value);
} FIXED, *LPFIXED;

typedef struct tagMAT2 {
	PACKED(FIXED eM11);
	PACKED(FIXED eM12);
	PACKED(FIXED eM21);
	PACKED(FIXED eM22);
} MAT2, *LPMAT2;
typedef CONST MAT2 CMAT2, *LPCMAT2;

typedef struct tagMMTIME {
	PACKED(UINT wType);
	union {
		PACKED(DWORD ms);
		PACKED(DWORD sample);
		PACKED(DWORD cb);
		PACKED(DWORD ticks);
		struct {
			PACKED(BYTE hour);
			PACKED(BYTE min);
			PACKED(BYTE sec);
			PACKED(BYTE frame);
			PACKED(BYTE fps);
			PACKED(BYTE dummy);
			PACKED(BYTE pad[2]);
		} smpte;
		struct {
			PACKED(DWORD songptrpos);
		} midi;
	} u;
} MMTIME, *LPMMTIME;

typedef struct tagAUXCAPS {
} AUXCAPS, *LPAUXCAPS;

typedef struct tagDCB {
} DCB, *LPDCB;

typedef struct tagCOMMTIMEOUTS {
} COMMTIMEOUTS, *LPCOMMTIMEOUTS;

typedef struct tagCOMSTAT {
} COMSTAT, *LPCOMSTAT;

typedef struct tagCOMMCONFIG {
} COMMCONFIG, *LPCOMMCONFIG;

typedef struct tagFILETIME {
	PACKED(DWORD dwLowDateTime);
	PACKED(DWORD dwHighDateTime);
} FILETIME, *PFILETIME, *LPFILETIME;

typedef struct tagPROGRESS_ROUTINE {
} PROGRESS_ROUTINE, *LPPROGRESS_ROUTINE;

typedef struct tagFIBER_START_ROUTINE {
} FIBER_START_ROUTINE, *LPFIBER_START_ROUTINE;

typedef struct tagCOORD {
	PACKED(SHORT X);
	PACKED(SHORT Y);
} COORD, *LPCOORD;

typedef struct tagCONSOLE_CURSOR_INFO {
} CONSOLE_CURSOR_INFO, *PCONSOLE_CURSOR_INFO;

typedef struct tagCONSOLE_SCREEN_BUFFER_INFO {
} CONSOLE_SCREEN_BUFFER_INFO, *PCONSOLE_SCREEN_BUFFER_INFO, *LPCONSOLE_SCREEN_BUFFER_INFO;

typedef struct tagCOMMPROP {
} COMMPROP, *LPCOMMPROP;

typedef struct tagSYSTEM_INFO {
} SYSTEM_INFO, *LPSYSTEM_INFO;

typedef struct tagSYSTEM_POWER_STATUS {
} SYSTEM_POWER_STATUS, *LPSYSTEM_POWER_STATUS;

typedef struct tagCONTEXT {
} CONTEXT, *LPCONTEXT;

typedef struct tagLDT_ENTRY {
} LDT_ENTRY, *LPLDT_ENTRY;

typedef struct tagLPTIME_ZONE_INFORMATION {
} TIME_ZONE_INFORMATION, *LPTIME_ZONE_INFORMATION;

typedef struct tagBY_HANDLE_FILE_INFORMATION {
} BY_HANDLE_FILE_INFORMATION, *LPBY_HANDLE_FILE_INFORMATION;

typedef struct tagINPUT_RECORD {
} INPUT_RECORD, *PINPUT_RECORD, *LPINPUT_RECORD;

typedef struct tagSMALL_RECT {
} SMALL_RECT, *PSMALL_RECT, *LPSMALL_RECT;

typedef struct tagCHAR_INFO {
} CHAR_INFO, *PCHAR_INFO, *LPCHAR_INFO;

typedef struct tagDEBUG_EVENT {
} DEBUG_EVENT, *LPDEBUG_EVENT;

typedef struct tagACCEL {
} ACCEL, *LPACCEL;

typedef struct tagICONINFO {
} ICONINFO, *PICONINFO, *LPICONINFO;

typedef struct tagCONVCONTEXT {
} CONVCONTEXT, *PCONVCONTEXT, *LPCONVCONTEXT;

typedef struct tagCONVINFO {
} CONVINFO, *PCONVINFO, *LPCONVINFO;

typedef struct tagSECURITY_QUALITY_OF_SERVICE {
} SECURITY_QUALITY_OF_SERVICE, *PSECURITY_QUALITY_OF_SERVICE, *LPSECURITY_QUALITY_OF_SERVICE;

typedef struct tagDRAWTEXTPARAMS {
} DRAWTEXTPARAMS, *LPDRAWTEXTPARAMS;

typedef struct tagSCROLLINFO {
} SCROLLINFO, *LPSCROLLINFO;
typedef const SCROLLINFO CSCROLLINFO, *LPCSCROLLINFO;

typedef struct tagSECURITY_INFORMATION {
} SECURITY_INFORMATION, *PSECURITY_INFORMATION, *LPSECURITY_INFORMATION;

typedef struct tagSECURITY_DESCRIPTOR {
} SECURITY_DESCRIPTOR, *PSECURITY_DESCRIPTOR, *LPSECURITY_DESCRIPTOR;

typedef struct tagSECURITY_DESCRIPTOR_CONTROL {
} SECURITY_DESCRIPTOR_CONTROL, *PSECURITY_DESCRIPTOR_CONTROL, *LPSECURITY_DESCRIPTOR_CONTROL;

typedef struct tagWINDOWPLACEMENT {
} WINDOWPLACEMENT, *LPWINDOWPLACEMENT;

typedef struct tagTRACKMOUSEEVENT {
} TRACKMOUSEEVENT, *LPTRACKMOUSEEVENT;

typedef struct tagTPMPARAMS {
} TPMPARAMS, *LPTPMPARAMS;

typedef struct tagAUXCAPSA {
} AUXCAPSA, *LPAUXCAPSA;

typedef struct tagAUXCAPSW {
} AUXCAPSW, *LPAUXCAPSW;

typedef struct tagJOYINFO {
} JOYINFO, *LPJOYINFO;

typedef struct tagJOYINFOEX {
} JOYINFOEX, *LPJOYINFOEX;

typedef struct tagJOYCAPSA {
} JOYCAPSA, *LPJOYCAPSA;

typedef struct tagJOYCAPSW {
} JOYCAPSW, *LPJOYCAPSW;

typedef struct tagMIDIHDR {
} MIDIHDR, *LPMIDIHDR;

typedef struct tagMIDIINCAPSA {
} MIDIINCAPSA, *LPMIDIINCAPSA;

typedef struct tagMIDIINCAPSW {
} MIDIINCAPSW, *LPMIDIINCAPSW;

typedef struct tagMIDIOUTCAPSA {
} MIKDIOUTCAPSA, *LPMIDIOUTCAPSA;

typedef struct tagMIDIOUTCAPSW {
} MIKDIOUTCAPSW, *LPMIDIOUTCAPSW;

typedef struct tagMIXERCONTROLDETAILS {
} MIXERCONTROLDETAILS, *LPMIXERCONTROLDETAILS;

typedef struct tagMIXERCAPSA {
} MIXERCAPSA, *LPMIXERCAPSA;

typedef struct tagMIXERCAPSW {
} MIXERCAPSW, *LPMIXERCAPSW;

typedef struct tagMIXERLINECONTROLSA {
} MIXERLINECONTROLSA, *LPMIXERLINECONTROLSA;

typedef struct tagMIXERLINECONTROLSW {
} MIXERLINECONTROLSW, *LPMIXERLINECONTROLSW;

typedef struct tagMIXERLINEA {
} MIXERLINEA, *LPMIXERLINEA;

typedef struct tagMIXERLINEW {
} MIXERLINEW, *LPMIXERLINEW;

typedef struct tagMMIOINFO {
} MMIOINFO, *LPMMIOINFO;
typedef const MMIOINFO CMMIOINFO, *LPCMMIOINFO;

typedef struct tagMMCKINFO {
} MMCKINFO, *LPMMCKINFO;

typedef struct tagTIMECAPS {
} TIMECAPS, *LPTIMECAPS;

typedef struct tagWAVEINCAPSA {
} WAVEINCAPSA, *LPWAVEINCAPSA;

typedef struct tagWAVEINCAPSW {
} WAVEINCAPSW, *LPWAVEINCAPSW;

typedef struct tagWAVEOUTCAPSA {
} WAVEOUTCAPSA, *LPWAVEOUTCAPSA;

typedef struct tagWAVEOUTCAPSW {
} WAVEOUTCAPSW, *LPWAVEOUTCAPSW;

typedef struct tagWAVEFORMATEX {
} WAVEFORMATEX, *LPWAVEFORMATEX;
typedef const WAVEFORMATEX CWAVEFORMATEX, *LPCWAVEFORMATEX;

typedef struct tagGENERIC_MAPPING {
} GENERIC_MAPPING, *PGENERIC_MAPPING, *LPGENERIC_MAPPING;

typedef struct tagPRIVILEGE_SET {
} PRIVILEGE_SET, *PPRIVILEGE_SET, *LPPRIVILEGE_SET;

typedef struct tagACL {
} ACL, *PACL, *LPACL;

typedef struct tagTOKEN_GROUPS {
} TOKEN_GROUPS, *PTOKEN_GROUPS, *LPTOKEN_GROUPS;

typedef struct tagTOKEN_PRIVILEGES {
} TOKEN_PRIVILEGES, *PTOKEN_PRIVILEGES, *LPTOKEN_PRIVILEGES;

typedef struct tagSID_IDENTIFIER_AUTHORITY {
} SID_IDENTIFIER_AUTHORITY, *PSID_IDENTIFIER_AUTHORITY, *LPSID_IDENTIFIER_AUTHORITY;

typedef struct tagLUID {
} LUID, *PLUID, *LPLUID;

typedef struct tagSERVICE_STATUS {
} SERVICE_STATUS, *LPSERVICE_STATUS;

typedef struct tagSECURITY_IMPERSONATION_LEVEL {
} SECURITY_IMPERSONATION_LEVEL, *LPIMPERSONATION_LEVEL;

typedef struct tagENUM_SERVICE_STATUSA {
} ENUM_SERVICE_STATUSA, *LPENUM_SERVICE_STATUSA;

typedef struct tagENUM_SERVICE_STATUSW {
} ENUM_SERVICE_STATUSW, *LPENUM_SERVICE_STATUSW;

typedef struct tagACL_INFORMATION_CLASS {
} ACL_INFORMATION_CLASS, *LPACL_INFORMATION_CLASS;

typedef struct tagSID_NAME {
} SID_NAME, *PSID_NAME, *LPSID_NAME;

typedef struct tagSID_NAME_USE {
} SID_NAME_USE, *PSID_NAME_USE, *LPSID_NAME_USE;

typedef struct tagTOKEN_INFORMATION_CLASS {
} TOKEN_INFORMATION_CLASS, *LPTOKEN_INFORMATION_CLASS;

typedef struct tagQUERY_SERVICE_CONFIGA {
} QUERY_SERVICE_CONFIGA, *LPQUERY_SERVICE_CONFIGA;

typedef struct tagQUERY_SERVICE_CONFIGW {
} QUERY_SERVICE_CONFIGW, *LPQUERY_SERVICE_CONFIGW;

typedef struct tagQUERY_SERVICE_LOCK_STATUSA {
} QUERY_SERVICE_LOCK_STATUSA, *LPQUERY_SERVICE_LOCK_STATUSA;

typedef struct tagQUERY_SERVICE_LOCK_STATUSW {
} QUERY_SERVICE_LOCK_STATUSW, *LPQUERY_SERVICE_LOCK_STATUSW;

typedef struct tagVALENTA {
} VALENTA, *PVALENTA, *LPVALENTA;

typedef struct tagVALENTW {
} VALENTW, *PVALENTW, *LPVALENTW;

typedef struct tagSERVICE_TABLE_ENTRYA {
} SERVICE_TABLE_ENTRYA, *LPSERVICE_TABLE_ENTRYA;

typedef struct tagSERVICE_TABLE_ENTRYW {
} SERVICE_TABLE_ENTRYW, *LPSERVICE_TABLE_ENTRYW;

typedef struct tagPIXELFORMATDESCRIPTOR {
} PIXELFORMATDESCRIPTOR, *LPPIXELFORMATDESCRIPTOR;

typedef struct tagXFORM {
} XFORM, *LPXFORM;

typedef struct tagBITMAP {
} BITMAP, *LPBITMAP;

typedef struct tagCOLORADJUSTMENT {
} COLORADJUSTMENT, *LPCOLORADJUSTMENT;

typedef struct tagLOGBRUSH {
} LOGBRUSH, *LPLOGBRUSH;

typedef struct tagLOGCOLORSPACEA {
} LOGCOLORSPACEA, *LPLOGCOLORSPACEA;

typedef struct tagLOGCOLORSPACEW {
} LOGCOLORSPACEW, *LPLOGCOLORSPACEW;

typedef struct tagLOGPEN {
} LOGPEN, *LPLOGPEN;

typedef struct tagRGNDATA {
} RGNDATA, *LPRGNDATA;

typedef struct tagSIZE {
} SIZE, *LPSIZE;

typedef struct tagABC {
} ABC, *LPABC;

typedef struct tagABCFLOAT {
} ABCFLOAT, *LPABCFLOAT;

typedef struct tagGCP_RESULTSA {
} GCP_RESULTSA, *LPGCP_RESULTSA;

typedef struct tagGCP_RESULTSW {
} GCP_RESULTSW, *LPGCP_RESULTSW;

typedef struct tagKERNINGPAIR {
} KERNINGPAIR, *LPKERNINGPAIR;

typedef struct tagOUTLINETEXTMETRICA {
} OUTLINETEXTMETRICA, *LPOUTLINETEXTMETRICA;

typedef struct tagOUTLINETEXTMETRICW {
} OUTLINETEXTMETRICW, *LPOUTLINETEXTMETRICW;

typedef struct tagENHMETAHEADER {
} ENHMETAHEADER, *LPENHMETAHEADER;

typedef struct tagRASTERIZER_STATUS {
} RASTERIZER_STATUS, *LPRASTERIZER_STATUS;

typedef struct tagHANDLETABLE {
} HANDLETABLE, *LPHANDLETABLE;

typedef struct tagMETARECORD {
} METARECORD, *LPMETARECORD;

typedef struct tagHMETARECORD {
} HMETARECORD, *LPHMETARECORD;

typedef struct tagENHMETARECORD {
} ENHMETARECORD, *LPENHMETARECORD;

typedef struct tagPOLYTEXTA {
} POLYTEXTA, *LPPOLYTEXTA;

typedef struct tagPOLYTEXTW {
} POLYTEXTW, *LPPOLYTEXTW;

typedef struct tagMETAFILEPICT {
} METAFILEPICT, *LPMETAFILEPICT;

typedef struct tagDOCINFO {
} DOCINFO, *LPDOCINFO;

typedef struct tagCHARSETINFO {
} CHARSETINFO, *LPCHARSETINFO;

typedef struct tagNOTIFYICONDATAA {
} NOTIFYICONDATAA, *PNOTIFYICONDATAA, *LPNOTIFYICONDATAA;

typedef struct tagNOTIFYICONDATAW {
} NOTIFYICONDATAW, *PNOTIFYICONDATAW, *LPNOTIFYICONDATAW;

typedef struct tagSHELLEXECUTEINFOA {
} SHELLEXECUTEINFOA, *LPSHELLEXECUTEINFOA;

typedef struct tagSHELLEXECUTEINFOW {
} SHELLEXECUTEINFOW, *LPSHELLEXECUTEINFOW;

typedef struct tagITEMIDLIST {
} ITEMIDLIST, *LPITEMIDLIST;
typedef const ITEMIDLIST CITEMIDLIST, *LPCITEMIDLIST;

typedef struct tagMALLOC {
} MALLOC, *LPMALLOC;

typedef struct tagSHFILEINFOA {
} SHFILEINFOA, *LPSHFILEINFOA;

typedef struct tagSHFILEINFOW {
} SHFILEINFOW, *LPSHFILEINFOW;

typedef struct tagSHELLFOLDER {
} SHELLFOLDER, *LPSHELLFOLDER;

typedef struct tagSHFILEOPSTRUCTA {
} SHFILEOPSTRUCTA, *LPSHFILEOPSTRUCTA;

typedef struct tagSHFILEOPSTRUCTW {
} SHFILEOPSTRUCTW, *LPSHFILEOPSTRUCTW;

typedef struct tagBROWSEINFO {
} BROWSEINFO, *PBROWSEINFO, *LPBROWSEINFO;

typedef struct tagAPPBARDATA {
} APPBARDATA, *PAPPBARDATA, *LPAPPBARDATA;

typedef enum tagGET_FILEEX_INFO_LEVELS {
} GET_FILEEX_INFO_LEVELS;

typedef enum tagTOKEN_TYPE {
} TOKEN_TYPE;

#endif	// !defined(__Win32Structures_h__)
